name: 'Docploy'
description: 'Tests, checks, and deploys your documentation to GitHub Pages'
inputs:
  githubToken:
    description: GitHub token
  username:
    description: 'Username for doc generation commits'
    default: 'docploy'
  email:
    description: 'Email for doc generation commits'
    default: 'docploy@github.com'
  timeout:
    description: 'Timeout for waiting until docs are generated, in seconds (default: 60)'
    default: 120,
  baseUrl:
    description: 'The GitHub Pages base URL for your repo'
  docsDir:
    description: 'Path to the docs dir'
    default: 'docs'
  pagesBranch:
    description: 'The branch set up to serve Github Pages (default: gh-pages)'
    default: 'gh-pages'

branding:
  icon: 'book-open'
  color: 'yellow'

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: yarn
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: Test code snippets
      # Only supports running JS code snippets for now
      run: |
        yarn jest --passWithNoTests --rootDir=${GITHUB_WORKSPACE}/${PROJECT_DIR} --reporters="default" --reporters="$GITHUB_ACTION_PATH/dist/jestReporter/index.js"
      working-directory: ${{ github.action_path }}
      shell: bash
      env:
        BASE_URL: ${{ inputs.baseUrl }}
        DOCS_DIR: ${{ inputs.docsDir }}
        PROJECT_DIR: 'docploy'

    - name: Build docs
      run: ./scripts/buildDocs.sh
      working-directory: ${{ github.action_path }}
      shell: bash
      env:
        BASE_URL: ${{ inputs.baseUrl }}
        DOCS_DIR: ${{ inputs.docsDir }}

    - name: Upload
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${ACTION_PATH}/out
      env:
        ACTION_PATH: ${{ github.action_path }}

    - name: Deploy to GitHub Pages
      id: 'deployment'
      uses: actions/deploy-pages@v1

    # - name: Push built docs to GitHub Pages branch
    #   run: ./scripts/pushPages.sh
    #   working-directory: ${{ github.action_path }}
    #   shell: bash
    #   env:
    #     EMAIL: ${{ inputs.email }}
    #     USERNAME: ${{ inputs.username }}
    #     PAGES_BRANCH: ${{ inputs.pagesBranch }}

    # - name: Check pages deploy
    #   run: node dist/checkPagesDeploy
    #   working-directory: ${{ github.action_path }}
    #   shell: bash
    #   env:
    #     BASE_URL: ${{ inputs.baseUrl }}
    #     GITHUB_TOKEN: ${{ inputs.githubToken }}
